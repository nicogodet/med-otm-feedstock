diff --git a/config/cmake_files/medMacros.cmake b/config/cmake_files/medMacros.cmake
index 79698ad..f21778c 100644
--- a/config/cmake_files/medMacros.cmake
+++ b/config/cmake_files/medMacros.cmake
@@ -447,7 +447,7 @@ MACRO(MED_FIND_HDF5)
     ##
     ## Requires 1.10.x version
     ##
-    IF (NOT HDF_VERSION_MAJOR_REF EQUAL 1 OR NOT HDF_VERSION_MINOR_REF EQUAL 10 OR NOT HDF_VERSION_RELEASE_REF GREATER 1)
+    IF (HDF5_VERSION VERSION_LESS 1.10.2)
         MESSAGE(FATAL_ERROR "HDF5 version is ${HDF_VERSION_REF}. Only versions >= 1.10.2 are supported.")
     ENDIF()
     ##
diff --git a/src/ci/MEDfileCompatibility.c b/src/ci/MEDfileCompatibility.c
index ddfa489..081d970 100644
--- a/src/ci/MEDfileCompatibility.c
+++ b/src/ci/MEDfileCompatibility.c
@@ -71,7 +71,7 @@ MEDfileCompatibility(const char* const filename,
   _hversionMMR=10000*_hmajeur+100*_hmineur+_hrelease;
   /* ISCRUTE(_hversionMMR); */
   /* ISCRUTE(HDF_VERSION_NUM_REF); */
-  if ( (_hversionMMR >= HDF_VERSION_NUM_REF) && (_hmineur == HDF_VERSION_MINOR_REF) ) *hdfok = MED_TRUE;
+  if (_hversionMMR >= HDF_VERSION_NUM_REF) *hdfok = MED_TRUE;
 
   /* TODO : Vérifier si la version mineure HDF du fichier est supérieure
      à la version mineure de la bibliothèque HDF utilisée :
@@ -113,10 +113,10 @@ MEDfileCompatibility(const char* const filename,
 #if MED_NUM_MAJEUR != 4
 #error "Don't forget to update the test version here when you change the major version of the library !"
 #endif
-#if H5_VERS_MINOR > 10
-#error "Don't forget to check the compatibility version of the library, depending on the internal hdf model choice !"
-#error "Cf. _MEDfileCreate ..."
-#endif
+// #if H5_VERS_MINOR > 10
+// #error "Don't forget to check the compatibility version of the library, depending on the internal hdf model choice !"
+// #error "Cf. _MEDfileCreate ..."
+// #endif
 
  SORTIE:
   _ret = 0;
diff --git a/src/hdfi/_MEDfileCreate.c b/src/hdfi/_MEDfileCreate.c
index c685eda..520ea37 100644
--- a/src/hdfi/_MEDfileCreate.c
+++ b/src/hdfi/_MEDfileCreate.c
@@ -159,9 +159,9 @@ med_idt _MEDfileCreate(const char * const filename, const med_access_mode access
    * En HDF5-1.10.0p1 cela n'a aucun effet ! 
    * Un test autoconf permet de fixer un intervalle de version HDF à MED.
    */
-#if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
-#endif
+// #if H5_VERS_MINOR > 14
+// #error "Don't forget to change the compatibility version of the library !"
+// #endif
    
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18 ) ) {
     MED_ERR_(_fid,MED_ERR_INIT,MED_ERR_PROPERTY,MED_ERR_FILEVERSION_MSG);
diff --git a/src/hdfi/_MEDfileOpen.c b/src/hdfi/_MEDfileOpen.c
index 7044763..e29b083 100644
--- a/src/hdfi/_MEDfileOpen.c
+++ b/src/hdfi/_MEDfileOpen.c
@@ -72,9 +72,9 @@ med_idt _MEDfileOpen(const char * const filename,const med_access_mode accessmod
 
    •   The creation order tracking property, H5P_CRT_ORDER_TRACKED, has been set in the group creation property list (see H5Pset_link_creation_order). 
   */
-#if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
-#endif
+// #if H5_VERS_MINOR > 14
+// #error "Don't forget to change the compatibility version of the library !"
+// #endif
 /* L'avantage de bloquer le modèle interne HDF5 
    est que l'on peut modifier des fichiers med de différentes versions majeures de fichiers.
    L'inconvénient est que l'on ne profite pas des évolutions de performances d'HDF.
diff --git a/src/hdfi/_MEDmemFileOpen.c b/src/hdfi/_MEDmemFileOpen.c
index 7a10e9b..409cef7 100644
--- a/src/hdfi/_MEDmemFileOpen.c
+++ b/src/hdfi/_MEDmemFileOpen.c
@@ -434,9 +434,9 @@ med_idt _MEDmemFileOpen(const char * const filename, med_memfile * const memfile
     goto ERROR;
   }
 
-#if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
-#endif
+// #if H5_VERS_MINOR > 14
+// #error "Don't forget to change the compatibility version of the library !"
+// #endif
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18) ) {
     MED_ERR_(_fid,MED_ERR_INIT,MED_ERR_PROPERTY,MED_ERR_FILEVERSION_MSG);
     goto ERROR;
diff --git a/src/hdfi/_MEDparFileCreate.c b/src/hdfi/_MEDparFileCreate.c
index e1fc029..55f0b6a 100644
--- a/src/hdfi/_MEDparFileCreate.c
+++ b/src/hdfi/_MEDparFileCreate.c
@@ -64,9 +64,9 @@ med_idt _MEDparFileCreate(const char * const filename, const med_access_mode acc
    * En HDF5-1.10.0p1 cela n'a aucun effet ! 
    * Un test autoconf permet de fixer un intervalle de version HDF à MED.
    */
-#if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
-#endif
+// #if H5_VERS_MINOR > 14
+// #error "Don't forget to change the compatibility version of the library !"
+// #endif
    
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18 ) ) {
     MED_ERR_(_fid,MED_ERR_INIT,MED_ERR_PROPERTY,MED_ERR_FILEVERSION_MSG);
diff --git a/src/hdfi/_MEDparFileOpen.c b/src/hdfi/_MEDparFileOpen.c
index 875989f..ef813bf 100644
--- a/src/hdfi/_MEDparFileOpen.c
+++ b/src/hdfi/_MEDparFileOpen.c
@@ -55,9 +55,9 @@ med_idt _MEDparFileOpen(const char * const filename,const med_access_mode access
     MED_ERR_(_fid,MED_ERR_INIT,MED_ERR_PROPERTY,MED_ERR_PARALLEL_MSG);
     goto ERROR;
   }
-#if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
-#endif
+// #if H5_VERS_MINOR > 14
+// #error "Don't forget to change the compatibility version of the library !"
+// #endif
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18 ) ) {
     MED_ERR_(_fid,MED_ERR_INIT,MED_ERR_PROPERTY,MED_ERR_FILEVERSION_MSG);
     goto ERROR;
